name: 'test'

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:


  fomu-toolchain:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { icon: 🐧, os: Ubuntu }
          - { icon: 🧊, os: Windows }
          - { icon: 🍎, os: macOS }
    runs-on: ${{ matrix.os }}-latest
    name: '${{ matrix.icon}} ${{ matrix.os }} | fomu-toolchain'
    defaults:
      run:
        shell: bash
    steps:

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Scala
      uses: olafurpg/setup-scala@v10
      with:
        java-version: openjdk@1.11

    - name: Install (Ubuntu)
      if: matrix.os == 'ubuntu'
      run: |
        curl -L https://ziglang.org/download/0.9.0/zig-linux-x86_64-0.9.0.tar.xz | tar -xJf -
        echo "$(pwd)/zig-linux-x86_64-0.9.0" >> $GITHUB_PATH

    - name: Install (Mac OS)
      if: matrix.os == 'macos'
      run: brew install zig

    - name: Install (Windows)
      if: matrix.os == 'windows'
      run: |
        choco install zig --version 0.9.0
        ln -s $(which python) /usr/bin/python3

    - run: python ./get-toolchain.py
      env:
        GH_TOKEN: ${{ github.token }}

    - run: ./.github/tests.sh


  all-in-one:
    name: '🛳️ Container | All-in-one'
    runs-on: ubuntu-latest
    env:
      GHDL_PLUGIN_MODULE: ghdl
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - uses: docker://gcr.io/hdl-containers/impl
      with:
        args: ./.github/hdl-tests.sh


  fine-grained:
    name: '🛳️ Container | Fine-grained'
    runs-on: ubuntu-latest
    env:
      GHDL_PLUGIN_MODULE: ghdl
      CONTAINER_ENGINE: docker
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Pull container images
      run: |
        docker pull gcr.io/hdl-containers/ghdl/yosys
        docker pull gcr.io/hdl-containers/nextpnr/ice40
        docker pull gcr.io/hdl-containers/icestorm

    - run: ./.github/hdl-tests.sh


  msys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          {icon: '⬛', sys: 'mingw32'},
          {icon: '🟦', sys: 'mingw64'},
          {icon: '🟨', sys: 'ucrt64' },
        ]
    name: '${{ matrix.icon }} MSYS2 | ${{ matrix.sys }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        update: true
        install: make
        pacboy: >
          icestorm:p
          yosys:p
          nextpnr:p

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - run: ./.github/hdl-tests.sh
